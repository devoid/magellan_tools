#!/usr/bin/env python
import argparse
import ConfigParser
import MySQLdb
import os
import sys

def get_user_id(cursors, username):
    cursors['keystone'].execute('SELECT id from user where name="%s"' % (username))
    result_tuple = cursors['keystone'].fetchone()
    return result_tuple[0]

def get_resources (conns, cursors, db, table, username):
    cursors[db].execute('SELECT id from %s where user_id="%s"' % (table, username))
    ids = cursors[db].fetchall() 
    for id in ids:
	print ("Resource: %s ID: %s" % (table, id[0]))
        
parser = argparse.ArgumentParser(
    description="Get the current set of resources a user is consuming")
parser.add_argument('username')
args = parser.parse_args().__dict__

# Get DB Username and Password
config = ConfigParser.ConfigParser()
config.read(os.path.expanduser('~/mysql.config'))

# Connect to databases
dbs = [ 'keystone', 'nova' ]
db_conns = {}
db_cursors = {}
for db in dbs:
    db_conns[db] = MySQLdb.connect(
        'localhost',
        config.get('mysql', 'username'),
        config.get('mysql', 'password'),
        db
    )
    db_cursors[db] = db_conns[db].cursor()
   
# Enumerate databases and tables with user_id entry
resource_types = [
    ['nova', 'instances'],
    ['nova', 'security_groups'],
    ['nova', 'key_pairs'],
    ['nova', 'snapshots'],
    ['nova', 'volumes'],
]

# Get inventory
user_id = get_user_id(db_cursors, args['username'])
for resource in resource_types:
    (db, table) = resource
    get_resources(db_conns, db_cursors, db, table, user_id)
